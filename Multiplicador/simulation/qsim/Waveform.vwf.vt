// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/16/2022 17:48:58"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Multiplicador
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Multiplicador_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Clk;
reg [15:0] Multiplicador;
reg [15:0] Multiplicando;
reg St;
// wires                                               
wire Done;
wire Idle;
wire [31:0] Produto;

// assign statements (if any)                          
Multiplicador i1 (
// port map - connection between master ports and signals/registers   
	.Clk(Clk),
	.Done(Done),
	.Idle(Idle),
	.Multiplicador(Multiplicador),
	.Multiplicando(Multiplicando),
	.Produto(Produto),
	.St(St)
);
initial 
begin 
#3000000 $finish;
end 

// Clk
always
begin
	Clk = 1'b0;
	Clk = #10000 1'b1;
	#10000;
end 

// St
initial
begin
	St = 1'b0;
	St = #64000 1'b1;
end 
// Multiplicador[ 15 ]
initial
begin
	Multiplicador[15] = 1'b0;
end 
// Multiplicador[ 14 ]
initial
begin
	Multiplicador[14] = 1'b0;
end 
// Multiplicador[ 13 ]
initial
begin
	Multiplicador[13] = 1'b0;
end 
// Multiplicador[ 12 ]
initial
begin
	Multiplicador[12] = 1'b0;
end 
// Multiplicador[ 11 ]
initial
begin
	Multiplicador[11] = 1'b0;
end 
// Multiplicador[ 10 ]
initial
begin
	Multiplicador[10] = 1'b0;
end 
// Multiplicador[ 9 ]
initial
begin
	Multiplicador[9] = 1'b0;
end 
// Multiplicador[ 8 ]
initial
begin
	Multiplicador[8] = 1'b0;
end 
// Multiplicador[ 7 ]
initial
begin
	Multiplicador[7] = 1'b0;
end 
// Multiplicador[ 6 ]
initial
begin
	Multiplicador[6] = 1'b0;
end 
// Multiplicador[ 5 ]
initial
begin
	Multiplicador[5] = 1'b0;
end 
// Multiplicador[ 4 ]
initial
begin
	Multiplicador[4] = 1'b0;
end 
// Multiplicador[ 3 ]
initial
begin
	Multiplicador[3] = 1'b1;
end 
// Multiplicador[ 2 ]
initial
begin
	Multiplicador[2] = 1'b0;
end 
// Multiplicador[ 1 ]
initial
begin
	Multiplicador[1] = 1'b1;
end 
// Multiplicador[ 0 ]
initial
begin
	Multiplicador[0] = 1'b1;
end 
// Multiplicando[ 15 ]
initial
begin
	Multiplicando[15] = 1'b0;
end 
// Multiplicando[ 14 ]
initial
begin
	Multiplicando[14] = 1'b0;
end 
// Multiplicando[ 13 ]
initial
begin
	Multiplicando[13] = 1'b0;
end 
// Multiplicando[ 12 ]
initial
begin
	Multiplicando[12] = 1'b0;
end 
// Multiplicando[ 11 ]
initial
begin
	Multiplicando[11] = 1'b0;
end 
// Multiplicando[ 10 ]
initial
begin
	Multiplicando[10] = 1'b0;
end 
// Multiplicando[ 9 ]
initial
begin
	Multiplicando[9] = 1'b0;
end 
// Multiplicando[ 8 ]
initial
begin
	Multiplicando[8] = 1'b0;
end 
// Multiplicando[ 7 ]
initial
begin
	Multiplicando[7] = 1'b0;
end 
// Multiplicando[ 6 ]
initial
begin
	Multiplicando[6] = 1'b0;
end 
// Multiplicando[ 5 ]
initial
begin
	Multiplicando[5] = 1'b0;
end 
// Multiplicando[ 4 ]
initial
begin
	Multiplicando[4] = 1'b0;
end 
// Multiplicando[ 3 ]
initial
begin
	Multiplicando[3] = 1'b1;
end 
// Multiplicando[ 2 ]
initial
begin
	Multiplicando[2] = 1'b1;
end 
// Multiplicando[ 1 ]
initial
begin
	Multiplicando[1] = 1'b0;
end 
// Multiplicando[ 0 ]
initial
begin
	Multiplicando[0] = 1'b1;
end 
endmodule

